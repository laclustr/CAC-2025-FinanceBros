---
export const prerender = false;

import { hasOnboarded } from '../../lib/auth/hasOnboarded';
import Layout from '../../layouts/DashboardLayout.astro';
import DashboardNav from '../../components/DashboardComps/DashboardNav.astro';
import RecentTransactions from '../../components/DashboardComps/RecentTransactions.astro';
import PieChart from '../../components/DashboardComps/PieChart.tsx';
import AccountSelector from '../../components/DashboardComps/AccountSelector.astro';

const { cookies, redirect } = Astro;
const token = cookies.get('token')?.value;

const [user, onboarded] = await hasOnboarded(token);

if (!user) {
  return redirect('/login/sign-in');
}
if (!onboarded) {
  return redirect('/login/onboarding');
}
---

<Layout>
  <AccountSelector />

  <div id="account-info" data-username={user.firstName} class="flex flex-col gap-6">
    Loading balances...
  </div>

  <script type="module" is:client>
    const infoDiv = document.getElementById("account-info");
    const userName = infoDiv.dataset.username;

    let allAccounts = [];

    async function loadAccountsAndShowTotal() {
      try {
        const res = await fetch('/api/user/fetch/accounts', {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
        });

        if (!res.ok) throw new Error('Failed to fetch accounts');

        allAccounts = await res.json();

        const totalBalance = allAccounts.reduce(
          (sum, acc) => sum + parseFloat(acc.balance || 0),
          0
        ).toFixed(2);

        infoDiv.textContent = `All Accounts Balance: $${totalBalance}`;
      } catch (err) {
        console.error("Failed to load balances", err);
        infoDiv.textContent = `We couldn't load your balance.`;
      }
    }

    // Initial load
    loadAccountsAndShowTotal();

    window.addEventListener("accountSelected", (event) => {
      const { id, name } = event.detail;

      if (id === "all") {
        const total = allAccounts.reduce(
          (sum, acc) => sum + parseFloat(acc.balance || 0),
          0
        ).toFixed(2);
        infoDiv.textContent = `Total Balance: $${total}`;
        return;
      }

      const selected = allAccounts.find((acc) => acc.id === id);
      const balance = selected?.balance?.toFixed(2) ?? "0.00";
      infoDiv.textContent = `${name || selected?.name || 'Selected account'} Balance: $${balance}`;
    });
  </script>

  <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6">
    <RecentTransactions title="Purchases" refreshInterval={30000} />
    <PieChart client:load />
  </div>

  <DashboardNav />
</Layout>
