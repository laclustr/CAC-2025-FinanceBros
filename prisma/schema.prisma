generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          Int           @id @default(autoincrement())
  email       String        @unique
  password    String
  onboarded   Boolean       @default(false)
  createdAt   DateTime      @default(now())
  age         Int           @default(18)
  income      String        @default("under-1000")
  employer    String        @default("none")
  creditScore Int           @default(850)

  bankAccounts BankAccount[]
  purchases   Purchase[]
  deposits    Deposit[]
  goals       Goal[]
  investments Investment[]
}

model BankAccount {
  id        Int      @id @default(autoincrement())
  userId    Int
  user      User     @relation(fields: [userId], references: [id])
  name      String
  type      String   // "checking" or "savings"
  balance   Float
  createdAt DateTime @default(now())

  purchases Purchase[]
  deposits  Deposit[]
}

model Purchase {
  id            Int      @id @default(autoincrement())
  userId        Int
  bankAccountId Int
  user          User     @relation(fields: [userId], references: [id])
  bankAccount   BankAccount @relation(fields: [bankAccountId], references: [id])
  title         String
  amount        Float
  date          DateTime @default(now())
}

model Deposit {
  id            Int      @id @default(autoincrement())
  userId        Int
  bankAccountId Int
  user          User     @relation(fields: [userId], references: [id])
  bankAccount   BankAccount @relation(fields: [bankAccountId], references: [id])
  title         String
  amount        Float
  date          DateTime @default(now())
}

model Goal {
  id        Int      @id @default(autoincrement())
  userId    Int
  user      User     @relation(fields: [userId], references: [id])
  title     String
  target    Float
  progress  Float    @default(0)
  deadline  DateTime
  createdAt DateTime @default(now())
}

model Investment {
  id          Int      @id @default(autoincrement())
  userId      Int
  user        User     @relation(fields: [userId], references: [id])
  assetName   String
  amount      Float
  date        DateTime @default(now())
}